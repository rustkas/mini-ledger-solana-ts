// –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å Node.js –¥–ª—è SHA256.
import { createHash } from 'crypto';

/**
 * Proof of History (PoH)
 * PoH is used in conjunction with proof of stake to drastically increase 
 * the efficiency of verifying and recording transactions on the Solana blockchain.
 */
export class PoH {
    // —Ö—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –≤–∏–¥–µ Buffer (–±–∞–π—Ç—ã).  
    private state: Buffer;

    private constructor(seed: Buffer) {
        // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–≤–∞—Ç–Ω—ã–π ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å PoH –Ω–∞–ø—Ä—è–º—É—é –Ω–µ–ª—å–∑—è, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É fromSeed.
        this.state = Buffer.from(seed);
    }

    /**
     * –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É hex –¥–ª–∏–Ω–æ–π 64 —Å–∏–º–≤–æ–ª–∞ (32 –±–∞–π—Ç–∞),
     * —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å —ç—Ç–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
     */
    static fromSeed(hexSeed: string) {
        if (hexSeed.length !== 64) throw new Error('seed must be 32 bytes hex');
        return new PoH(Buffer.from(hexSeed, 'hex'));
    }
    /**
     * –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ hex-—Å—Ç—Ä–æ–∫–µ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è).
     */
    current(): string {
        return this.state.toString('hex');
    }
    /**
     * –¥–µ–ª–∞–µ—Ç –æ–¥–∏–Ω ¬´—Ç–∏–∫¬ª PoH: –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ = SHA256 –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ.
     * –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç this (—á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —á–µ–π–Ω–∏—Ç—å –≤—ã–∑–æ–≤—ã).
     */
    tick(): this {
        this.state = createHash('sha256').update(this.state).digest();
        return this;
    }
/**
 * ¬´–≤–ø–ª–µ—Ç–∞–µ—Ç¬ª –¥–∞–Ω–Ω—ã–µ:
 * —Ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ,
 * —Ö—ç—à–∏—Ä—É–µ–º state || dataHash, 
 * –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ. 
 * üëâ –¢–∞–∫ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —á–∞—Å—Ç—å—é PoH-—Ü–µ–ø–æ—á–∫–∏.
 */
    stamp(data: Buffer): this {
        const dataHash = createHash('sha256').update(data).digest();
        this.state = createHash('sha256').update(this.state).update(dataHash).digest();
        return this;
    }
}
